/// репо https://github.com/wwall/learn-regexp

#Область Тесты

#Область Переменные_для_юнит_тестирования
Перем КонтекстЯдра;
Перем Ожидаем;
Перем СозданныеОбработки;

#КонецОбласти 

#Область Инициализация
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	НаборТестов.НачатьГруппу("Группа обязательные тесты");
	НаборТестов.Добавить("ТестДолжен_СформироватьРегэкспИНайтиегоВВходныхДанных");
	НаборТестов.Добавить("ТекстДолжен_СкомпилироватьРегэксп");
	НаборТестов.Добавить("ТекстДолжен_СкомпилироватьРегэкспДоДКА");
	НаборТестов.НачатьГруппу("Группа тесты ДКА");
	НаборТестов.Добавить("ПроверкаРаботыДКА");
	НаборТестов.Добавить("ПроверкаРаботыДКА_Негатив");
	НаборТестов.Добавить("ПроверкаРаботыДКА_НельзяУстановитьКонечнымСостояниеНеСуществующеВоМножествеСостояний");
	НаборТестов.Добавить("ПроверкаРаботыДКА_НельзяУстановитьНачальноеСостояниеНеСуществующеВоМножествеСостояний");
	НаборТестов.Добавить("ПроверкаРаботыДКА_НельзяПередаватьНесуществующийСимволИСостояние");
	НаборТестов.Добавить("ПроверкаРаботыДКА_НеверныйСимволВСтроке");
	НаборТестов.Добавить("ВыводGraphViz_ДКА");
	
	
	
	
	НаборТестов.НачатьГруппу("Группа тесты НКА");
	НаборТестов.Добавить("ПроверкаРаботыНКА");
	НаборТестов.Добавить("ПроверкаРаботыНКА_Негатив");
	НаборТестов.Добавить("ПроверкаРаботыНКА_НельзяУстановитьКонечнымСостояниеНеСуществующеВоМножествеСостояний");
	НаборТестов.Добавить("ПроверкаРаботыНКА_НельзяУстановитьНачальноеСостояниеНеСуществующеВоМножествеСостояний");
	НаборТестов.Добавить("ПроверкаРаботыНКА_НельзяПередаватьНесуществующийСимволИСостояние");
	НаборТестов.Добавить("ПроверкаРаботыНКА_НеверныйСимволВСтроке");
	НаборТестов.Добавить("ВыводGraphViz_НКА");
	
	
	
	НаборТестов.НачатьГруппу("Группа тесты eНКА");
	НаборТестов.Добавить("ПроверкаРаботыeНКА");
	НаборТестов.Добавить("ПроверкаРаботыeНКА_Негатив");
	НаборТестов.Добавить("ПроверкаРаботыeНКА_НельзяУстановитьКонечнымСостояниеНеСуществующеВоМножествеСостояний");
	НаборТестов.Добавить("ПроверкаРаботыeНКА_НельзяУстановитьНачальноеСостояниеНеСуществующеВоМножествеСостояний");
	НаборТестов.Добавить("ПроверкаРаботыeНКА_НельзяПередаватьНесуществующийСимволИСостояние");
	НаборТестов.Добавить("ПроверкаРаботыeНКА_НеверныйСимволВСтроке");
	НаборТестов.Добавить("ПроверкаРаботыeНКА_ДобавлениеАльтернатив_Позитивный");
	НаборТестов.Добавить("ПроверкаРаботыeНКА_ДобавлениеАльтернатив_Негативный");
	НаборТестов.Добавить("ПроверкаРаботыeНКА_ДобавлениеАльтернатив_Простой");
	
	НаборТестов.Добавить("ПроверкаРаботыeНКА_Конкатенация_Простой");
	НаборТестов.Добавить("ПроверкаРаботыeНКА_Повторения_01");
	НаборТестов.Добавить("ПроверкаРаботыeНКА_Повторения_0Много");
	НаборТестов.Добавить("ПроверкаРаботыeНКА_Повторения_1Много");
	
	НаборТестов.Добавить("ВыводGraphViz_еНКА");
	
	
	
	НаборТестов.НачатьГруппу("Группа тесты копиляция регэкспа");
	НаборТестов.Добавить("ПроверкаКомпиляцииСоединения");
	
	
КонецПроцедуры
#КонецОбласти 

#Область Служебное
Процедура ПередЗапускомТеста() Экспорт
	НачатьТранзакцию();
	СозданныеОбработки = новый Массив;
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	
	Для каждого х из СозданныеОбработки Цикл
		
		х = Неопределено;
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ВернутьОбработку(ПутьКОБработке)
	
	
	ТекущийФайл = Новый Файл(ЭтотОбъект.ИспользуемоеИмяФайла);
	ПолныйПутьКОбработке = ТекущийФайл.Путь+ПутьКОБработке;
	
	ВнешняяОбработка = ВнешниеОбработки.Создать(ПолныйПутьКОбработке);
	СозданныеОбработки.Добавить(ВнешняяОбработка);
	
	Возврат ВнешняяОбработка;
КонецФункции // ВернутьОбработку()

Процедура ДобавитьВМассив(Массив,Значение)
	
	Если Значение = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Массив.Добавить(Значение);
КонецПроцедуры

Функция ВМассив(х1,х2=Неопределено)
	МассивВозврата = новый Массив;
	
	ДобавитьВМассив(МассивВозврата,х1);
	ДобавитьВМассив(МассивВозврата,х2);
	
	Возврат МассивВозврата;
	
КонецФункции

#КонецОбласти 


#Область Выполняемые_Тесты
Процедура ТестДолжен_СформироватьРегэкспИНайтиегоВВходныхДанных() Экспорт
	
	регэксп = ВернутьОбработку("..\lib\regexp.epf");
	
	регэксп.УстановитьРегэксп("1010","10");
	
	регэксп.Найти("1010");
	
	Ожидаем.Что(регэксп.Позиция).ТекстСообщения("Проверям позицию").Равно(1);
	Ожидаем.Что(регэксп.Позиция).ТекстСообщения("Найденый текст").Равно("1010");
	
КонецПроцедуры

Процедура ТекстДолжен_СкомпилироватьРегэксп() Экспорт
	
	регэксп = ВернутьОбработку("..\lib\regexp.epf");
	
	СтруктрураРегэкспа = регэксп.СкомпилироватьРегэксп("1010","10");
	
	
	ОжидаемыйМассив = новый Массив;
	ОжидаемыйМассив.Добавить(новый Структура("функция,значение","сопоставить","1"));
	ОжидаемыйМассив.Добавить(новый Структура("функция,значение","сопоставить","0"));
	ОжидаемыйМассив.Добавить(новый Структура("функция,значение","сопоставить","1"));
	ОжидаемыйМассив.Добавить(новый Структура("функция,значение","сопоставить","0"));
	
	СтруктураОжидания = новый Структура("функция,значение","СписокКоманд",ОжидаемыйМассив);
	
	
	Ожидаем.Что(СтруктрураРегэкспа.Функция).ТекстСообщения("Проверка компиляции").Равно(СтруктураОжидания.Функция);
	Ожидаем.Что(СтруктрураРегэкспа.Значение[0].Значение).ТекстСообщения("Проверка компиляции [0]").Равно(СтруктураОжидания.Значение[0].Значение);
	Ожидаем.Что(СтруктрураРегэкспа.Значение[1].Значение).ТекстСообщения("Проверка компиляции [1]").Равно(СтруктураОжидания.Значение[1].Значение);
	Ожидаем.Что(СтруктрураРегэкспа.Значение[2].Значение).ТекстСообщения("Проверка компиляции [2]").Равно(СтруктураОжидания.Значение[2].Значение);
	Ожидаем.Что(СтруктрураРегэкспа.Значение[3].Значение).ТекстСообщения("Проверка компиляции [3]").Равно(СтруктураОжидания.Значение[3].Значение);
КонецПроцедуры

Процедура ТекстДолжен_СкомпилироватьРегэкспДоДКА() Экспорт
	
	регэксп = ВернутьОбработку("..\lib\regexp.epf");
	
	СтруктрураРегэкспа = регэксп.СкомпилироватьРегэксп("1010","10");
	СтруктураАвтомат = регэксп.ПостроитьДКА(СтруктрураРегэкспа);
	
	Ожидаем.Что(1).ТекстСообщения("Описать представление для ДКА").Равно(2);
КонецПроцедуры

#Область Тесты_ДКА

Процедура ПроверкаРаботыДКА() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().ДКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	МассивСостояний.Добавить(3);
	МассивСостояний.Добавить(4);
	МассивСостояний.Добавить(5);
	МассивСостояний.Добавить(100);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(5);
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний) 
	.УстановитьКонечноеСостояние(ОписаниеДКА,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(ОписаниеДКА,1)
	.ДобавитьПереход(ОписаниеДКА,1,"0",2)
	.ДобавитьПереход(ОписаниеДКА,2,"1",3)
	.ДобавитьПереход(ОписаниеДКА,3,"0",4)
	.ДобавитьПереход(ОписаниеДКА,4,"1",5)
	.ДобавитьПереходыВОшибочныеСостояния(ОписаниеДКА);
	
	
	НашаСтрокаДляПроверки = "0101";
	
	КА.Применить(ОписаниеДКА,НашаСтрокаДляПроверки);
	
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(ОписаниеДКА)).ТекстСообщения("Проверка ДКА (позитив)").Равно(Истина);
КонецПроцедуры

Процедура ПроверкаРаботыДКА_Негатив() Экспорт
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().ДКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	МассивСостояний.Добавить(3);
	МассивСостояний.Добавить(4);
	МассивСостояний.Добавить(5);
	МассивСостояний.Добавить(100);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(5);
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний) 
	.УстановитьКонечноеСостояние(ОписаниеДКА,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(ОписаниеДКА,1)
	.ДобавитьПереход(ОписаниеДКА,1,"0",2)
	.ДобавитьПереход(ОписаниеДКА,2,"1",3)
	.ДобавитьПереход(ОписаниеДКА,3,"0",4)
	.ДобавитьПереход(ОписаниеДКА,4,"1",5)
	.ДобавитьПереходыВОшибочныеСостояния(ОписаниеДКА);
	
	
	НашаСтрокаДляПроверки = "01010";
	
	КА.Применить(ОписаниеДКА,НашаСтрокаДляПроверки);
	
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(ОписаниеДКА)).ТекстСообщения("Проверка ДКА (негатив)").Равно(Ложь);
КонецПроцедуры

Процедура ПроверкаРаботыДКА_НельзяУстановитьКонечнымСостояниеНеСуществующеВоМножествеСостояний() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().ДКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(500);
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(МассивКонечныхСостояний);
	
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний);
	
	Ожидаем.Что(КА).Метод("УстановитьКонечноеСостояние",МассивДляПередачи).ВыбрасываетИсключение("Неверное конечное состояние '500' (отсутствует во множестве допустимых состояний)");
	
КонецПроцедуры

Процедура ПроверкаРаботыДКА_НельзяУстановитьНачальноеСостояниеНеСуществующеВоМножествеСостояний() Экспорт
	
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().ДКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(500);
	
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний);
	
	Ожидаем.Что(КА).Метод("УстановитьНачальноеСостояние",МассивДляПередачи).ВыбрасываетИсключение("Неверное начальное состояние '500' (отсутствует во множестве допустимых состояний)");
	
КонецПроцедуры

Процедура ПроверкаРаботыДКА_НельзяПередаватьНесуществующийСимволИСостояние() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().ДКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний);
	
	
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(500);
	МассивДляПередачи.Добавить("0");
	МассивДляПередачи.Добавить(1);
	
	Ожидаем.Что(КА).Метод("ДобавитьПереход",МассивДляПередачи).ВыбрасываетИсключение("Неверное состояние источник '500' (отсутствует во множестве допустимых состояний)");
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(1);
	МассивДляПередачи.Добавить("0");
	МассивДляПередачи.Добавить(500);
	
	Ожидаем.Что(КА).Метод("ДобавитьПереход",МассивДляПередачи).ВыбрасываетИсключение("Неверное состояние приемник '500' (отсутствует во множестве допустимых состояний)");
	
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(1);
	МассивДляПередачи.Добавить("2");
	МассивДляПередачи.Добавить(2);
	
	Ожидаем.Что(КА).Метод("ДобавитьПереход",МассивДляПередачи).ВыбрасываетИсключение("Символ '2' не найден в алфавите");
	
	
	
КонецПроцедуры

Процедура ПроверкаРаботыДКА_НеверныйСимволВСтроке() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().ДКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	МассивСостояний.Добавить(3);
	МассивСостояний.Добавить(4);
	МассивСостояний.Добавить(5);
	МассивСостояний.Добавить(100);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(5);
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний) 
	.УстановитьКонечноеСостояние(ОписаниеДКА,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(ОписаниеДКА,1)
	.ДобавитьПереход(ОписаниеДКА,1,"0",2)
	.ДобавитьПереход(ОписаниеДКА,2,"1",3)
	.ДобавитьПереход(ОписаниеДКА,3,"0",4)
	.ДобавитьПереход(ОписаниеДКА,4,"1",5)
	.ДобавитьПереходыВОшибочныеСостояния(ОписаниеДКА);
	
	
	НашаСтрокаДляПроверки = "0201";
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(НашаСтрокаДляПроверки);
	
	
	Ожидаем.Что(КА).Метод("Применить",МассивДляПередачи).ВыбрасываетИсключение("Символ '2' не найден в алфавите");
	
КонецПроцедуры


#КонецОбласти 

#Область Тесты_НКА
Процедура ПроверкаРаботыНКА() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	МассивСостояний.Добавить(3);
	МассивСостояний.Добавить(4);
	МассивСостояний.Добавить(5);
	МассивСостояний.Добавить(500);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(5);
	
	ОписаниеКА = КА.ИнициализироватьКА(КА.Определения().НКА);
	
	КА                                  
	.УстановитьАлфавит(ОписаниеКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеКА,МассивСостояний) 
	.УстановитьКонечноеСостояние(ОписаниеКА,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(ОписаниеКА,1)
	.ДобавитьПереход(ОписаниеКА,1,"0",ВМассив(1,3))	.ДобавитьПереход(ОписаниеКА,1,"1",1)
	.ДобавитьПереход(ОписаниеКА,3,"0",4)   	.ДобавитьПереход(ОписаниеКА,3,"1",4)
	.ДобавитьПереход(ОписаниеКА,4,"0",5)   	.ДобавитьПереход(ОписаниеКА,4,"1",5)
	.ДобавитьПереход(ОписаниеКА,5,"0",500)   	.ДобавитьПереход(ОписаниеКА,5,"1",500)
	.ДобавитьПереход(ОписаниеКА,500,"0",500)   	.ДобавитьПереход(ОписаниеКА,500,"1",500);
	
	
	НашаСтрокаДляПроверки = "1011";
	
	КА.Применить(ОписаниеКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(ОписаниеКА)).ТекстСообщения("Проверка НКА (позитив)").Равно(Истина);
КонецПроцедуры

Процедура ПроверкаРаботыНКА_Негатив() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	МассивСостояний.Добавить(3);
	МассивСостояний.Добавить(4);
	МассивСостояний.Добавить(5);
	МассивСостояний.Добавить(500);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(5);
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().НКА);
	
	КА                                  
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний) 
	.УстановитьКонечноеСостояние(ОписаниеДКА,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(ОписаниеДКА,1)
	.ДобавитьПереход(ОписаниеДКА,1,"0",ВМассив(1,3))	.ДобавитьПереход(ОписаниеДКА,1,"1",1)
	.ДобавитьПереход(ОписаниеДКА,3,"0",4)   	.ДобавитьПереход(ОписаниеДКА,3,"1",4)
	.ДобавитьПереход(ОписаниеДКА,4,"0",5)   	.ДобавитьПереход(ОписаниеДКА,4,"1",5)
	.ДобавитьПереход(ОписаниеДКА,5,"0",500)   	.ДобавитьПереход(ОписаниеДКА,5,"1",500)
	.ДобавитьПереход(ОписаниеДКА,500,"0",500)   	.ДобавитьПереход(ОписаниеДКА,500,"1",500);
	
	
	НашаСтрокаДляПроверки = "1111";
	КА.Применить(ОписаниеДКА,НашаСтрокаДляПроверки);
	
	
	
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(ОписаниеДКА)).ТекстСообщения("Проверка ДКА (негатив)").Равно(Ложь);
КонецПроцедуры

Процедура ПроверкаРаботыНКА_НельзяУстановитьКонечнымСостояниеНеСуществующеВоМножествеСостояний() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().НКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(500);
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(МассивКонечныхСостояний);
	
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний);
	
	Ожидаем.Что(КА).Метод("УстановитьКонечноеСостояние",МассивДляПередачи).ВыбрасываетИсключение("Неверное конечное состояние '500' (отсутствует во множестве допустимых состояний)");
	
	
КонецПроцедуры

Процедура ПроверкаРаботыНКА_НельзяУстановитьНачальноеСостояниеНеСуществующеВоМножествеСостояний() Экспорт
	
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().НКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(500);
	
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний);
	
	Ожидаем.Что(КА).Метод("УстановитьНачальноеСостояние",МассивДляПередачи).ВыбрасываетИсключение("Неверное начальное состояние '500' (отсутствует во множестве допустимых состояний)");
	
	
КонецПроцедуры

Процедура ПроверкаРаботыНКА_НельзяПередаватьНесуществующийСимволИСостояние() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().НКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний);
	
	
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(500);
	МассивДляПередачи.Добавить("0");
	МассивДляПередачи.Добавить(1);
	
	Ожидаем.Что(КА).Метод("ДобавитьПереход",МассивДляПередачи).ВыбрасываетИсключение("Неверное состояние источник '500' (отсутствует во множестве допустимых состояний)");
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(1);
	МассивДляПередачи.Добавить("0");
	МассивДляПередачи.Добавить(500);
	
	Ожидаем.Что(КА).Метод("ДобавитьПереход",МассивДляПередачи).ВыбрасываетИсключение("Неверное состояние приемник '500' (отсутствует во множестве допустимых состояний)");
	
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(1);
	МассивДляПередачи.Добавить("2");
	МассивДляПередачи.Добавить(2);
	
	Ожидаем.Что(КА).Метод("ДобавитьПереход",МассивДляПередачи).ВыбрасываетИсключение("Символ '2' не найден в алфавите");
	
	
	
	
КонецПроцедуры

Процедура ПроверкаРаботыНКА_НеверныйСимволВСтроке() Экспорт
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().НКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	МассивСостояний.Добавить(3);
	МассивСостояний.Добавить(4);
	МассивСостояний.Добавить(5);
	МассивСостояний.Добавить(100);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(5);
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний) 
	.УстановитьКонечноеСостояние(ОписаниеДКА,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(ОписаниеДКА,1)
	.ДобавитьПереход(ОписаниеДКА,1,"0",2)
	.ДобавитьПереход(ОписаниеДКА,2,"1",3)
	.ДобавитьПереход(ОписаниеДКА,3,"0",4)
	.ДобавитьПереход(ОписаниеДКА,4,"1",5);
	
	
	НашаСтрокаДляПроверки = "0201";
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(НашаСтрокаДляПроверки);
	
	
	Ожидаем.Что(КА).Метод("Применить",МассивДляПередачи).ВыбрасываетИсключение("Символ '2' не найден в алфавите");
	
	
КонецПроцедуры

#КонецОбласти 

#Область Тесты_еНКА

#Область проверка_работы
Процедура ПроверкаРаботыeНКА() Экспорт
	
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	ОписаниеКА = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	МассивБукв.Добавить("2");
	МассивБукв.Добавить("3");
	МассивБукв.Добавить("4");
	МассивБукв.Добавить("5");
	МассивБукв.Добавить("6");
	МассивБукв.Добавить("7");
	МассивБукв.Добавить("8");
	МассивБукв.Добавить("9");
	МассивБукв.Добавить("d");
	МассивБукв.Добавить("b");
	
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	МассивСостояний.Добавить(3);
	МассивСостояний.Добавить(4);
	МассивСостояний.Добавить(5);
	МассивСостояний.Добавить(6);
	МассивСостояний.Добавить(999);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(6);
	МассивКонечныхСостояний.Добавить(3);
	
	
	КА
	.УстановитьАлфавит(ОписаниеКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеКА,МассивСостояний) 
	.УстановитьКонечноеСостояние(ОписаниеКА,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(ОписаниеКА,1)
	.ДобавитьПереходЕ(ОписаниеКА,1,ВМассив(2,4))
	
	.ДобавитьПереход(ОписаниеКА,2,"0",2)		.ДобавитьПереход(ОписаниеКА,2,"1",2)		.ДобавитьПереход(ОписаниеКА,2,"b",3)
	.ДобавитьПереход(ОписаниеКА,4,"0",4)		.ДобавитьПереход(ОписаниеКА,4,"1",4)		.ДобавитьПереход(ОписаниеКА,4,"2",4).ДобавитьПереход(ОписаниеКА,4,"3",4).ДобавитьПереход(ОписаниеКА,4,"4",4).ДобавитьПереход(ОписаниеКА,4,"5",4).ДобавитьПереход(ОписаниеКА,4,"6",4).ДобавитьПереход(ОписаниеКА,4,"7",4).ДобавитьПереход(ОписаниеКА,4,"8",4).ДобавитьПереход(ОписаниеКА,4,"9",4)	
	.ДобавитьПереход(ОписаниеКА,4,"0",5)		.ДобавитьПереход(ОписаниеКА,4,"1",5)		.ДобавитьПереход(ОписаниеКА,4,"2",5).ДобавитьПереход(ОписаниеКА,4,"3",5).ДобавитьПереход(ОписаниеКА,4,"4",5).ДобавитьПереход(ОписаниеКА,4,"5",5).ДобавитьПереход(ОписаниеКА,4,"6",5).ДобавитьПереход(ОписаниеКА,4,"7",5).ДобавитьПереход(ОписаниеКА,4,"8",5).ДобавитьПереход(ОписаниеКА,4,"9",5)
	.ДобавитьПереходЕ(ОписаниеКА,5,6)			.ДобавитьПереход(ОписаниеКА,5,"d",6)		.ДобавитьПереходЕ(ОписаниеКА,5,6);
	
	
	НашаСтрокаДляПроверки = "1011b";
	КА.Применить(ОписаниеКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(ОписаниеКА)).ТекстСообщения("Проверка еНКА (позитив)").Равно(Истина);
	НашаСтрокаДляПроверки = "1011";
	КА.Применить(ОписаниеКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(ОписаниеКА)).ТекстСообщения("Проверка еНКА (позитив)").Равно(Истина);
	НашаСтрокаДляПроверки = "1011d";
	КА.Применить(ОписаниеКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(ОписаниеКА)).ТекстСообщения("Проверка еНКА (позитив)").Равно(Истина);
КонецПроцедуры

Процедура ПроверкаРаботыeНКА_Негатив() Экспорт
	
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	ОписаниеКА = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	МассивБукв.Добавить("2");
	МассивБукв.Добавить("3");
	МассивБукв.Добавить("4");
	МассивБукв.Добавить("5");
	МассивБукв.Добавить("6");
	МассивБукв.Добавить("7");
	МассивБукв.Добавить("8");
	МассивБукв.Добавить("9");
	МассивБукв.Добавить("d");
	МассивБукв.Добавить("b");
	
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	МассивСостояний.Добавить(3);
	МассивСостояний.Добавить(4);
	МассивСостояний.Добавить(5);
	МассивСостояний.Добавить(6);
	МассивСостояний.Добавить(999);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(6);
	МассивКонечныхСостояний.Добавить(3);
	
	
	КА
	.УстановитьАлфавит(ОписаниеКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеКА,МассивСостояний) 
	.УстановитьКонечноеСостояние(ОписаниеКА,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(ОписаниеКА,1)
	.ДобавитьПереходЕ(ОписаниеКА,1,ВМассив(2,4))
	
	.ДобавитьПереход(ОписаниеКА,2,"0",2)		.ДобавитьПереход(ОписаниеКА,2,"1",2)		.ДобавитьПереход(ОписаниеКА,2,"b",3)
	.ДобавитьПереход(ОписаниеКА,4,"0",4)		.ДобавитьПереход(ОписаниеКА,4,"1",4)		.ДобавитьПереход(ОписаниеКА,4,"2",4).ДобавитьПереход(ОписаниеКА,4,"3",4).ДобавитьПереход(ОписаниеКА,4,"4",4).ДобавитьПереход(ОписаниеКА,4,"5",4).ДобавитьПереход(ОписаниеКА,4,"6",4).ДобавитьПереход(ОписаниеКА,4,"7",4).ДобавитьПереход(ОписаниеКА,4,"8",4).ДобавитьПереход(ОписаниеКА,4,"9",4)	
	.ДобавитьПереход(ОписаниеКА,4,"0",5)		.ДобавитьПереход(ОписаниеКА,4,"1",5)		.ДобавитьПереход(ОписаниеКА,4,"2",5).ДобавитьПереход(ОписаниеКА,4,"3",5).ДобавитьПереход(ОписаниеКА,4,"4",5).ДобавитьПереход(ОписаниеКА,4,"5",5).ДобавитьПереход(ОписаниеКА,4,"6",5).ДобавитьПереход(ОписаниеКА,4,"7",5).ДобавитьПереход(ОписаниеКА,4,"8",5).ДобавитьПереход(ОписаниеКА,4,"9",5)
	.ДобавитьПереходЕ(ОписаниеКА,5,6)			.ДобавитьПереход(ОписаниеКА,5,"d",6)		.ДобавитьПереходЕ(ОписаниеКА,5,6);
	
	
	
	НашаСтрокаДляПроверки = "12b";
	КА.Применить(ОписаниеКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(ОписаниеКА)).ТекстСообщения("Проверка еНКА (негатив)").Равно(Ложь);
	
	
КонецПроцедуры

Процедура ПроверкаРаботыeНКА_НельзяУстановитьКонечнымСостояниеНеСуществующеВоМножествеСостояний() Экспорт
	
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(500);
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(МассивКонечныхСостояний);
	
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний);
	
	Ожидаем.Что(КА).Метод("УстановитьКонечноеСостояние",МассивДляПередачи).ВыбрасываетИсключение("Неверное конечное состояние '500' (отсутствует во множестве допустимых состояний)");
	
КонецПроцедуры

Процедура ПроверкаРаботыeНКА_НельзяУстановитьНачальноеСостояниеНеСуществующеВоМножествеСостояний() Экспорт
	
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(500);
	
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний);
	
	Ожидаем.Что(КА).Метод("УстановитьНачальноеСостояние",МассивДляПередачи).ВыбрасываетИсключение("Неверное начальное состояние '500' (отсутствует во множестве допустимых состояний)");
	
	
КонецПроцедуры

Процедура ПроверкаРаботыeНКА_НельзяПередаватьНесуществующийСимволИСостояние() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний);
	
	
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(500);
	МассивДляПередачи.Добавить("0");
	МассивДляПередачи.Добавить(1);
	
	Ожидаем.Что(КА).Метод("ДобавитьПереход",МассивДляПередачи).ВыбрасываетИсключение("Неверное состояние источник '500' (отсутствует во множестве допустимых состояний)");
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(1);
	МассивДляПередачи.Добавить("0");
	МассивДляПередачи.Добавить(500);
	
	Ожидаем.Что(КА).Метод("ДобавитьПереход",МассивДляПередачи).ВыбрасываетИсключение("Неверное состояние приемник '500' (отсутствует во множестве допустимых состояний)");
	
	
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(1);
	МассивДляПередачи.Добавить("2");
	МассивДляПередачи.Добавить(2);
	
	Ожидаем.Что(КА).Метод("ДобавитьПереход",МассивДляПередачи).ВыбрасываетИсключение("Символ '2' не найден в алфавите");
	
	
	
КонецПроцедуры

Процедура ПроверкаРаботыeНКА_НеверныйСимволВСтроке() Экспорт
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	МассивСостояний.Добавить(3);
	МассивСостояний.Добавить(4);
	МассивСостояний.Добавить(5);
	МассивСостояний.Добавить(100);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(5);
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний) 
	.УстановитьКонечноеСостояние(ОписаниеДКА,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(ОписаниеДКА,1)
	.ДобавитьПереход(ОписаниеДКА,1,"0",2)
	.ДобавитьПереход(ОписаниеДКА,2,"1",3)
	.ДобавитьПереход(ОписаниеДКА,3,"0",4)
	.ДобавитьПереход(ОписаниеДКА,4,"1",5);
	
	
	НашаСтрокаДляПроверки = "0201";
	МассивДляПередачи = новый Массив;
	МассивДляПередачи.Добавить(ОписаниеДКА);
	МассивДляПередачи.Добавить(НашаСтрокаДляПроверки);
	
	
	Ожидаем.Что(КА).Метод("Применить",МассивДляПередачи).ВыбрасываетИсключение("Символ '2' не найден в алфавите");
	
	
	
КонецПроцедуры


#КонецОбласти 

#Область расширение
#Область Алтернатива
Процедура ПроверкаРаботыeНКА_ДобавлениеАльтернатив_Позитивный() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	еНКА_01 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	МассивБукв.Добавить("b");
	
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(2);
	
	
	КА
	.УстановитьАлфавит(еНКА_01,МассивБукв)
	.ДобавитьСостояния(еНКА_01,МассивСостояний) 
	.УстановитьКонечноеСостояние(еНКА_01,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(еНКА_01,1)
	.ДобавитьПереход(еНКА_01,1,"0",1)		.ДобавитьПереход(еНКА_01,1,"1",1)		.ДобавитьПереход(еНКА_01,1,"b",2);
	
	
	МассивБукв09 = новый Массив;
	МассивБукв09.Добавить("0");
	МассивБукв09.Добавить("1");
	МассивБукв09.Добавить("2");
	МассивБукв09.Добавить("3");
	МассивБукв09.Добавить("4");
	МассивБукв09.Добавить("5");
	МассивБукв09.Добавить("6");
	МассивБукв09.Добавить("7");
	МассивБукв09.Добавить("8");
	МассивБукв09.Добавить("9");
	МассивБукв09.Добавить("d");
	
	
	МассивСостояний09 = новый Массив;
	МассивСостояний09.Добавить(1);
	МассивСостояний09.Добавить(2);
	МассивСостояний09.Добавить(3);
	
	МассивКонечныхСостояний09 = новый Массив;
	МассивКонечныхСостояний09.Добавить(3);
	
	
	еНКА_09 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	КА
	.УстановитьАлфавит(еНКА_09,МассивБукв09)
	.ДобавитьСостояния(еНКА_09,МассивСостояний09) 
	.УстановитьКонечноеСостояние(еНКА_09,МассивКонечныхСостояний09)
	.УстановитьНачальноеСостояние(еНКА_09,1)
	.ДобавитьПереход(еНКА_09,1,"0",1).ДобавитьПереход(еНКА_09,1,"1",1).ДобавитьПереход(еНКА_09,1,"2",1).ДобавитьПереход(еНКА_09,1,"3",1).ДобавитьПереход(еНКА_09,1,"4",1).ДобавитьПереход(еНКА_09,1,"5",1).ДобавитьПереход(еНКА_09,1,"6",1).ДобавитьПереход(еНКА_09,1,"7",1).ДобавитьПереход(еНКА_09,1,"8",1).ДобавитьПереход(еНКА_09,1,"9",1)
	.ДобавитьПереход(еНКА_09,1,"0",2).ДобавитьПереход(еНКА_09,1,"1",2).ДобавитьПереход(еНКА_09,1,"2",2).ДобавитьПереход(еНКА_09,1,"3",2).ДобавитьПереход(еНКА_09,1,"4",2).ДобавитьПереход(еНКА_09,1,"5",2).ДобавитьПереход(еНКА_09,1,"6",2).ДобавитьПереход(еНКА_09,1,"7",2).ДобавитьПереход(еНКА_09,1,"8",2).ДобавитьПереход(еНКА_09,1,"9",2)
	.ДобавитьПереход(еНКА_09,2,"d",3).ДобавитьПереходЕ(еНКА_09,2,3);
	
	
	
	еНКА = КА.СоединитьПараллельно(еНКА_01,еНКА_09);
	
	НашаСтрокаДляПроверки = "1011b";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (позитив)").Равно(Истина);
	НашаСтрокаДляПроверки = "1011";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (позитив)").Равно(Истина);
	НашаСтрокаДляПроверки = "1011d";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (позитив)").Равно(Истина);
КонецПроцедуры

Процедура ПроверкаРаботыeНКА_ДобавлениеАльтернатив_Негативный() Экспорт
	КА = ВернутьОбработку("..\lib\FA.epf");
	еНКА_01 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	МассивБукв.Добавить("b");
	
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(2);
	
	
	КА
	.УстановитьАлфавит(еНКА_01,МассивБукв)
	.ДобавитьСостояния(еНКА_01,МассивСостояний) 
	.УстановитьКонечноеСостояние(еНКА_01,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(еНКА_01,1)
	.ДобавитьПереход(еНКА_01,1,"0",1)		.ДобавитьПереход(еНКА_01,1,"1",1)		.ДобавитьПереход(еНКА_01,1,"b",2);
	
	
	МассивБукв09 = новый Массив;
	МассивБукв09.Добавить("0");
	МассивБукв09.Добавить("1");
	МассивБукв09.Добавить("2");
	МассивБукв09.Добавить("3");
	МассивБукв09.Добавить("4");
	МассивБукв09.Добавить("5");
	МассивБукв09.Добавить("6");
	МассивБукв09.Добавить("7");
	МассивБукв09.Добавить("8");
	МассивБукв09.Добавить("9");
	МассивБукв09.Добавить("d");
	
	
	МассивСостояний09 = новый Массив;
	МассивСостояний09.Добавить(1);
	МассивСостояний09.Добавить(2);
	МассивСостояний09.Добавить(3);
	
	МассивКонечныхСостояний09 = новый Массив;
	МассивКонечныхСостояний09.Добавить(3);
	
	
	еНКА_09 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	КА
	.УстановитьАлфавит(еНКА_09,МассивБукв09)
	.ДобавитьСостояния(еНКА_09,МассивСостояний09) 
	.УстановитьКонечноеСостояние(еНКА_09,МассивКонечныхСостояний09)
	.УстановитьНачальноеСостояние(еНКА_09,1)
	.ДобавитьПереход(еНКА_09,1,"0",1).ДобавитьПереход(еНКА_09,1,"1",1).ДобавитьПереход(еНКА_09,1,"2",1).ДобавитьПереход(еНКА_09,1,"3",1).ДобавитьПереход(еНКА_09,1,"4",1).ДобавитьПереход(еНКА_09,1,"5",1).ДобавитьПереход(еНКА_09,1,"6",1).ДобавитьПереход(еНКА_09,1,"7",1).ДобавитьПереход(еНКА_09,1,"8",1).ДобавитьПереход(еНКА_09,1,"9",1)
	.ДобавитьПереход(еНКА_09,1,"0",2).ДобавитьПереход(еНКА_09,1,"1",2).ДобавитьПереход(еНКА_09,1,"2",2).ДобавитьПереход(еНКА_09,1,"3",2).ДобавитьПереход(еНКА_09,1,"4",2).ДобавитьПереход(еНКА_09,1,"5",2).ДобавитьПереход(еНКА_09,1,"6",2).ДобавитьПереход(еНКА_09,1,"7",2).ДобавитьПереход(еНКА_09,1,"8",2).ДобавитьПереход(еНКА_09,1,"9",2)
	.ДобавитьПереход(еНКА_09,2,"d",3).ДобавитьПереходЕ(еНКА_09,2,3);
	
	
	
	еНКА = КА.СоединитьПараллельно(еНКА_01,еНКА_09);
	

	НашаСтрокаДляПроверки = "12b";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (Негатив)").Равно(Ложь);
	
КонецПроцедуры

Процедура ПроверкаРаботыeНКА_ДобавлениеАльтернатив_Простой() Экспорт
	КА = ВернутьОбработку("..\lib\FA.epf");
	еНКА_01 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("a");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(2);
	
	
	КА
	.УстановитьАлфавит(еНКА_01,МассивБукв)
	.ДобавитьСостояния(еНКА_01,МассивСостояний) 
	.УстановитьКонечноеСостояние(еНКА_01,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(еНКА_01,1)
	.ДобавитьПереход(еНКА_01,1,"a",2);
	
	
	
	МассивБукв09 = новый Массив;
	МассивБукв09.Добавить("b");
	
	МассивСостояний09 = новый Массив;
	МассивСостояний09.Добавить(1);
	МассивСостояний09.Добавить(2);
	
	МассивКонечныхСостояний09 = новый Массив;
	МассивКонечныхСостояний09.Добавить(2);
	
	
	
	еНКА_09 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	КА
	.УстановитьАлфавит(еНКА_09,МассивБукв09)
	.ДобавитьСостояния(еНКА_09,МассивСостояний09) 
	.УстановитьКонечноеСостояние(еНКА_09,МассивКонечныхСостояний09)
	.УстановитьНачальноеСостояние(еНКА_09,1)
	.ДобавитьПереход(еНКА_09,1,"b",2);
	
	
	
	еНКА = КА.СоединитьПараллельно(еНКА_01,еНКА_09);
	
	НашаСтрокаДляПроверки = "a";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (нашли a)").Равно(Истина);
	НашаСтрокаДляПроверки = "b";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (нашли b)").Равно(Истина);
	НашаСтрокаДляПроверки = "aa";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (не нашли aa)").Равно(Ложь);
КонецПроцедуры
#КонецОбласти 

#Область Соединение

Процедура ПроверкаРаботыeНКА_Конкатенация_Простой() Экспорт
	
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	еНКА_01 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(2);
	
	
	КА
	.УстановитьАлфавит(еНКА_01,МассивБукв)
	.ДобавитьСостояния(еНКА_01,МассивСостояний) 
	.УстановитьКонечноеСостояние(еНКА_01,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(еНКА_01,1)
	.ДобавитьПереход(еНКА_01,1,"0",2);
	
	
	
	МассивБукв09 = новый Массив;
	МассивБукв09.Добавить("1");
	
	МассивСостояний09 = новый Массив;
	МассивСостояний09.Добавить(1);
	МассивСостояний09.Добавить(2);
	
	МассивКонечныхСостояний09 = новый Массив;
	МассивКонечныхСостояний09.Добавить(2);
	
	
	
	еНКА_09 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	КА
	.УстановитьАлфавит(еНКА_09,МассивБукв09)
	.ДобавитьСостояния(еНКА_09,МассивСостояний09) 
	.УстановитьКонечноеСостояние(еНКА_09,МассивКонечныхСостояний09)
	.УстановитьНачальноеСостояние(еНКА_09,1)
	.ДобавитьПереход(еНКА_09,1,"1",2);
	
	
	
	еНКА = КА.СоединитьПоследовательно(еНКА_01,еНКА_09);
	
	Текст = КА.ВернутьПредставление_gv(еНКА,"тест");

	
	НашаСтрокаДляПроверки = "01";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (нашли 01)").Равно(Истина);
	НашаСтрокаДляПроверки = "11";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (не нашли 01)").Равно(Ложь);
	
	
КонецПроцедуры
 

Процедура ПроверкаРаботыeНКА_Повторения_01() Экспорт

	//0 (0|1)?
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	еНКА_01 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	КА
	.УстановитьАлфавит(еНКА_01,ВМассив("0"))
	.ДобавитьСостояния(еНКА_01,ВМассив(1,2)) 
	.УстановитьКонечноеСостояние(еНКА_01,ВМассив(2))
	.УстановитьНачальноеСостояние(еНКА_01,1)
	.ДобавитьПереход(еНКА_01,1,"0",2);
	
	
	
	еНКА_09 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	КА
	.УстановитьАлфавит(еНКА_09,ВМассив("1"))
	.ДобавитьСостояния(еНКА_09,ВМассив(1,2)) 
	.УстановитьКонечноеСостояние(еНКА_09,ВМассив(2))
	.УстановитьНачальноеСостояние(еНКА_09,1)
	.ДобавитьПереход(еНКА_09,1,"1",2);
	
	
	еНКА = КА.СоединитьПоследовательно(еНКА_01,КА.Повторения_01(КА.СоединитьПараллельно(еНКА_01,еНКА_09)));
	
	НашаСтрокаДляПроверки = "01";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (нашли 01)").Равно(Истина);
	
	НашаСтрокаДляПроверки = "0";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (нашли 0)").Равно(Истина);
	
	НашаСтрокаДляПроверки = "11";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (не нашли 01 или 0)").Равно(Ложь);
	
	
	
КонецПроцедуры



Процедура ПроверкаРаботыeНКА_Повторения_0Много() Экспорт

	//01*
	
	//0 (0|1)?
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	еНКА_01 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	КА
	.УстановитьАлфавит(еНКА_01,ВМассив("0"))
	.ДобавитьСостояния(еНКА_01,ВМассив(1,2)) 
	.УстановитьКонечноеСостояние(еНКА_01,ВМассив(2))
	.УстановитьНачальноеСостояние(еНКА_01,1)
	.ДобавитьПереход(еНКА_01,1,"0",2);
	
	
	
	еНКА_09 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	КА
	.УстановитьАлфавит(еНКА_09,ВМассив("1"))
	.ДобавитьСостояния(еНКА_09,ВМассив(1,2)) 
	.УстановитьКонечноеСостояние(еНКА_09,ВМассив(2))
	.УстановитьНачальноеСостояние(еНКА_09,1)
	.ДобавитьПереход(еНКА_09,1,"1",2);
	
	
	еНКА = КА.СоединитьПоследовательно(еНКА_01,КА.Повторения_0Много(КА.СоединитьПараллельно(еНКА_01,еНКА_09)));
	
	НашаСтрокаДляПроверки = "0101";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (нашли 01)").Равно(Истина);
	
	НашаСтрокаДляПроверки = "0";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (нашли 0)").Равно(Истина);
	
	НашаСтрокаДляПроверки = "11";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (не нашли 01 или 0)").Равно(Ложь);
	

	
	
	
КонецПроцедуры




Процедура ПроверкаРаботыeНКА_Повторения_1Много() Экспорт
	
	//0 (0|1)+
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	еНКА_01 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	КА
	.УстановитьАлфавит(еНКА_01,ВМассив("0"))
	.ДобавитьСостояния(еНКА_01,ВМассив(1,2)) 
	.УстановитьКонечноеСостояние(еНКА_01,ВМассив(2))
	.УстановитьНачальноеСостояние(еНКА_01,1)
	.ДобавитьПереход(еНКА_01,1,"0",2);
	
	
	
	еНКА_09 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	КА
	.УстановитьАлфавит(еНКА_09,ВМассив("1"))
	.ДобавитьСостояния(еНКА_09,ВМассив(1,2)) 
	.УстановитьКонечноеСостояние(еНКА_09,ВМассив(2))
	.УстановитьНачальноеСостояние(еНКА_09,1)
	.ДобавитьПереход(еНКА_09,1,"1",2);
	
	
	еНКА = КА.СоединитьПоследовательно(еНКА_01,КА.Повторения_1Много(КА.СоединитьПараллельно(еНКА_01,еНКА_09)));
	
	
	Текст = КА.ВернутьПредставление_gv(еНКА,"тест");
	
	
	НашаСтрокаДляПроверки = "0101";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (нашли 01)").Равно(Истина);
	
	НашаСтрокаДляПроверки = "000";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (нашли 0)").Равно(Истина);
	
	НашаСтрокаДляПроверки = "11";
	КА.Применить(еНКА,НашаСтрокаДляПроверки);
	Ожидаем.Что(КА.ЭтоКонечноеСостояние(еНКА)).ТекстСообщения("Проверка еНКА (не нашли 01 или 0)").Равно(Ложь);
	
КонецПроцедуры


#КонецОбласти 


#КонецОбласти 




#КонецОбласти 

#Область ВыводGraphViz

Процедура ВыводGraphViz_ДКА() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().ДКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	МассивСостояний.Добавить(3);
	МассивСостояний.Добавить(4);
	МассивСостояний.Добавить(5);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(5);
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний) 
	.УстановитьКонечноеСостояние(ОписаниеДКА,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(ОписаниеДКА,1)
	.ДобавитьПереход(ОписаниеДКА,1,"0",2)
	.ДобавитьПереход(ОписаниеДКА,2,"1",3)
	.ДобавитьПереход(ОписаниеДКА,3,"0",4)
	.ДобавитьПереход(ОписаниеДКА,4,"1",5)
	.ДобавитьПереходыВОшибочныеСостояния(ОписаниеДКА);
	
	
	Текст = КА.ВернутьПредставление_gv(ОписаниеДКА,"тест");
	
	
	ОжидаемыйТекст = "digraph тест
	|{
	|1 [shape = circle  label = ""Start""];
	|2 [shape = circle  label = ""2""];
	|Error [shape = circle  label = ""Error""];
	|3 [shape = circle  label = ""3""];
	|4 [shape = circle  label = ""4""];
	|5 [shape = doublecircle  label = ""5""];
	|1 -> 2 [ label = ""0"" ];
	|1 -> Error [ label = ""1"" ];
	|2 -> 3 [ label = ""1"" ];
	|2 -> Error [ label = ""0"" ];
	|Error -> Error [ label = ""0"" ];
	|Error -> Error [ label = ""1"" ];
	|3 -> 4 [ label = ""0"" ];
	|3 -> Error [ label = ""1"" ];
	|4 -> 5 [ label = ""1"" ];
	|4 -> Error [ label = ""0"" ];
	|5 -> Error [ label = ""0"" ];
	|5 -> Error [ label = ""1"" ];
	|}";
	Ожидаем.Что(Текст).ТекстСообщения("Формат для ДКА соблюден").Равно(ОжидаемыйТекст);
КонецПроцедуры

Процедура ВыводGraphViz_НКА() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	
	
	ОписаниеДКА = КА.ИнициализироватьКА(КА.Определения().НКА);
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("0");
	МассивБукв.Добавить("1");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	МассивСостояний.Добавить(3);
	МассивСостояний.Добавить(4);
	МассивСостояний.Добавить(5);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(5);
	
	КА
	.УстановитьАлфавит(ОписаниеДКА,МассивБукв)
	.ДобавитьСостояния(ОписаниеДКА,МассивСостояний) 
	.УстановитьКонечноеСостояние(ОписаниеДКА,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(ОписаниеДКА,1)
	.ДобавитьПереход(ОписаниеДКА,1,"0",2)
	.ДобавитьПереход(ОписаниеДКА,2,"1",3)
	.ДобавитьПереход(ОписаниеДКА,2,"1",4)
	.ДобавитьПереход(ОписаниеДКА,3,"0",4)
	.ДобавитьПереход(ОписаниеДКА,4,"1",5);
	
	
	Текст = КА.ВернутьПредставление_gv(ОписаниеДКА,"тест");
	
	
	ОжидаемыйТекст = "digraph тест
	|{
	|1 [shape = circle  label = ""Start""];
	|2 [shape = circle  label = ""2""];
	|3 [shape = circle  label = ""3""];
	|4 [shape = circle  label = ""4""];
	|5 [shape = doublecircle  label = ""5""];
	|1 -> 2 [ label = ""0"" ];
	|2 -> 3 [ label = ""1"" ];
	|2 -> 4 [ label = ""1"" ];
	|3 -> 4 [ label = ""0"" ];
	|4 -> 5 [ label = ""1"" ];
	|}";
	Ожидаем.Что(Текст).ТекстСообщения("Формат для НКА соблюден").Равно(ОжидаемыйТекст);
КонецПроцедуры

Процедура ВыводGraphViz_еНКА() Экспорт
	
	КА = ВернутьОбработку("..\lib\FA.epf");
	еНКА_01 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	
	
	МассивБукв = новый Массив;
	МассивБукв.Добавить("a");
	
	МассивСостояний = новый Массив;
	МассивСостояний.Добавить(1);
	МассивСостояний.Добавить(2);
	
	
	МассивКонечныхСостояний = новый Массив;
	МассивКонечныхСостояний.Добавить(2);
	
	
	КА
	.УстановитьАлфавит(еНКА_01,МассивБукв)
	.ДобавитьСостояния(еНКА_01,МассивСостояний) 
	.УстановитьКонечноеСостояние(еНКА_01,МассивКонечныхСостояний)
	.УстановитьНачальноеСостояние(еНКА_01,1)
	.ДобавитьПереход(еНКА_01,1,"a",2);
	
	
	
	МассивБукв09 = новый Массив;
	МассивБукв09.Добавить("b");
	
	МассивСостояний09 = новый Массив;
	МассивСостояний09.Добавить(1);
	МассивСостояний09.Добавить(2);
	
	МассивКонечныхСостояний09 = новый Массив;
	МассивКонечныхСостояний09.Добавить(2);
	
	
	
	еНКА_09 = КА.ИнициализироватьКА(КА.Определения().еНКА);
	КА
	.УстановитьАлфавит(еНКА_09,МассивБукв09)
	.ДобавитьСостояния(еНКА_09,МассивСостояний09) 
	.УстановитьКонечноеСостояние(еНКА_09,МассивКонечныхСостояний09)
	.УстановитьНачальноеСостояние(еНКА_09,1)
	.ДобавитьПереход(еНКА_09,1,"b",2);
	
	
	
	еНКА = КА.СоединитьПараллельно(еНКА_01,еНКА_09);

	
	Текст = КА.ВернутьПредставление_gv(еНКА,"тест");
	
	
	ОжидаемыйТекст = "digraph тест
	|{
	|s4 [shape = circle  label = ""s4""];
	|s [shape = circle  label = ""Start""];
	|s1 [shape = circle  label = ""s1""];
	|s2 [shape = circle  label = ""s2""];
	|s3 [shape = circle  label = ""s3""];
	|e5 [shape = doublecircle  label = ""e5""];
	|s2 -> e5 [ label = ""ε"" ];
	|s -> s1 [ label = ""ε"" ];
	|s -> s3 [ label = ""ε"" ];
	|s4 -> e5 [ label = ""ε"" ];
	|s1 -> s2 [ label = ""a"" ];
	|s3 -> s4 [ label = ""b"" ];
	|}";
	Ожидаем.Что(Текст).ТекстСообщения("Формат соблюден").Равно(ОжидаемыйТекст);
КонецПроцедуры

#КонецОбласти 


#Область  Компиляция_регулярки
Процедура ПроверкаКомпиляцииСоединения() Экспорт
	/// Описать компиляию простого регэкспа
    Ожидаем.Что(1).ТекстСообщения("Тормознули здесь!").Равно(0);
КонецПроцедуры
 

#КонецОбласти 


#КонецОбласти 





#КонецОбласти  




/// Переделать алфавит на соответствие
